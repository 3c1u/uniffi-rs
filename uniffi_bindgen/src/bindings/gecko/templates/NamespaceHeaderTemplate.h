// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!

#ifndef mozilla_dom_{{ ci.namespace()|class_name_webidl }}
#define mozilla_dom_{{ ci.namespace()|class_name_webidl }}

#include "mozilla/ErrorResult.h"
#include "mozilla/dom/{{ ci.namespace()|class_name_webidl }}Shared.h"

namespace mozilla {
namespace dom {

class {{ ci.namespace()|class_name_cpp }} final {
 public:
  {{ ci.namespace()|class_name_cpp }}() = default;

  {% for func in functions %}
  static
  {# /* Return type. `void` for methods that return nothing, or return their
         value via an out param. */ #}
  {%- match ReturnPosition::for_function(func) -%}
  {%- when ReturnPosition::OutParam with (_) -%}
  void
  {%- when ReturnPosition::Void %}
  void
  {%- when ReturnPosition::Return with (type_) %}
  {{ type_|ret_type_cpp }}
  {%- endmatch %}
  {{ func.name()|fn_name_cpp }}(
      GlobalObject& aGlobal
      {%- let args = func.arguments() %}
      {%- if !args.is_empty() %}, {% endif %}
      {%- for arg in args %}
      {{ arg.type_()|arg_type_cpp }} {{ arg.name() }}{%- if !loop.last %}, {% endif %}
      {%- endfor -%}
      {#- /* Out param returns. */ #}
      {%- match ReturnPosition::for_function(func) -%}
      {%- when ReturnPosition::OutParam with (type_) -%}
      , {{ type_|ret_type_cpp }} aRetVal
      {% else %}{% endmatch %}
      {#- /* Errors. */ #}
      {%- if func.throws().is_some() %}
      {%- if ReturnPosition::for_function(func).is_out_param() || !args.is_empty() %}, {% endif %}
      ErrorResult& aRv
      {%- endif %}
  );
  {% endfor %}

 private:
  ~{{ ci.namespace()|class_name_cpp }}() = default;
};

}  // namespace dom
}  // namespace mozilla

#endif  // mozilla_dom_{{ ci.namespace()|class_name_webidl }}
